# Generated by Django 5.2.3 on 2025-06-27 13:57

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('sellers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='تلفن همراه')),
                ('username', models.TextField(blank=True, max_length=30, null=True, unique=True, verbose_name='نام کاربری')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='آدرس جدید', max_length=100)),
                ('address_line', models.TextField()),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_name', models.CharField(max_length=100, verbose_name='نام کارت')),
                ('card_number', models.CharField(max_length=16, verbose_name='شماره کارت')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_cards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('open', 'باز'), ('in_progress', 'در حال بررسی'), ('answered', 'پاسخ داده شده'), ('closed', 'بسته شده')], default='open', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'کم'), ('medium', 'متوسط'), ('high', 'بالا')], default='medium', max_length=10)),
                ('category', models.CharField(choices=[('technical', 'فنی'), ('financial', 'مالی'), ('order', 'سفارش'), ('other', 'سایر')], default='technical', max_length=20)),
                ('order_id', models.CharField(blank=True, max_length=50, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'تیکت',
                'verbose_name_plural': 'تیکت\u200cها',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_staff_reply', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='users.ticket')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'پاسخ تیکت',
                'verbose_name_plural': 'پاسخ\u200cهای تیکت',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='عنوان')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='کد تخفیف')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('percentage', models.PositiveIntegerField(verbose_name='درصد تخفیف')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('for_first_purchase', models.BooleanField(default=False, verbose_name='فقط اولین خرید')),
                ('is_single_use', models.BooleanField(default=True, verbose_name='یکبار مصرف')),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاریخ شروع اعتبار')),
                ('valid_to', models.DateTimeField(default=True, verbose_name='تاریخ پایان اعتبار')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('min_order_amount', models.PositiveIntegerField(default=0, verbose_name='حداقل مبلغ سفارش')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discounts', to='sellers.seller', verbose_name='فروشگاه')),
            ],
            options={
                'verbose_name': 'تخفیف',
                'verbose_name_plural': 'تخفیف\u200cها',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['code'], name='users_disco_code_7c9dd7_idx'), models.Index(fields=['is_active'], name='users_disco_is_acti_9c3dc6_idx'), models.Index(fields=['valid_to'], name='users_disco_valid_t_938c66_idx')],
            },
        ),
    ]
